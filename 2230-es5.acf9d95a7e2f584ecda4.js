!function(){"use strict";function e(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,(i=r.key,n=void 0,"symbol"==typeof(n=function(e,t){if("object"!=typeof e||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0!==o){var r=o.call(e,t||"default");if("object"!=typeof r)return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(i,"string"))?n:String(n)),r)}var i,n}function t(t,o,r){return o&&e(t.prototype,o),r&&e(t,r),Object.defineProperty(t,"prototype",{writable:!1}),t}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(self.webpackChunkmaskito=self.webpackChunkmaskito||[]).push([[2230],{92230:function(e,r,i){i.r(r),i.d(r,{TransformerDocPageModule:function(){return f}});var n,s=i(12057),u=i(55358),a=i(7476),c=i(82847),p=i(60885),l=i(74788),g=((n=t(function e(){o(this,e),this.maskExpressionDocPage="/core-concepts/mask-expression",this.processorsDocPage="/core-concepts/processors",this.overwriteModeDocPage="/core-concepts/overwrite-mode",this.utilityInActionDemo=i.e(7698).then(i.t.bind(i,7698,17))})).\u0275fac=function(e){return new(e||n)},n.\u0275cmp=l.Xpm({type:n,selectors:[["transformer-doc-page"]],decls:44,vars:4,consts:[["header","Transformer","package","CORE"],[1,"tui-space_top-0"],[3,"code"],[1,"tui-space_top-12"],[1,"tui-list"],[1,"tui-list__item"],["tuiLink","",3,"routerLink"]],template:function(e,t){1&e&&(l.TgZ(0,"tui-doc-page",0),l.TgZ(1,"section"),l.TgZ(2,"p",1),l.TgZ(3,"strong"),l._uU(4,"Maskito"),l.qZA(),l._uU(5," libraries were created to prevent user from typing invalid value. "),l._UZ(6,"br"),l.TgZ(7,"strong"),l._uU(8,"Maskito"),l.qZA(),l._uU(9," listens "),l.TgZ(10,"code"),l._uU(11,"beforeinput"),l.qZA(),l._uU(12," and "),l.TgZ(13,"code"),l._uU(14,"input"),l.qZA(),l._uU(15," events. Programatic (by developer) changes of input's value don't trigger these events! "),l.qZA(),l.TgZ(16,"tui-notification"),l.TgZ(17,"strong"),l._uU(18,"Maskito"),l.qZA(),l._uU(19," is based on the assumption that developer is capable to programatically patch input with "),l.TgZ(20,"u"),l._uU(21,"valid"),l.qZA(),l._uU(22," value! "),l.qZA(),l.TgZ(23,"p"),l._uU(24," If you need to programatically patch input's value but you are not sure that your value is valid (for example, you get it from the server), you should use "),l.TgZ(25,"code"),l._uU(26,"maskitoTransform"),l.qZA(),l._uU(27," utility . "),l.qZA(),l.qZA(),l._UZ(28,"tui-doc-code",2),l.TgZ(29,"section",3),l.TgZ(30,"h2"),l._uU(31,"Next steps"),l.qZA(),l.TgZ(32,"p"),l._uU(33," The following sections are recommended to explore core concepts further: "),l.qZA(),l.TgZ(34,"ul",4),l.TgZ(35,"li",5),l.TgZ(36,"a",6),l._uU(37," Mask expression "),l.qZA(),l.qZA(),l.TgZ(38,"li",5),l.TgZ(39,"a",6),l._uU(40," Processors "),l.qZA(),l.qZA(),l.TgZ(41,"li",5),l.TgZ(42,"a",6),l._uU(43," Overwrite mode "),l.qZA(),l.qZA(),l.qZA(),l.qZA(),l.qZA()),2&e&&(l.xp6(28),l.Q6J("code",t.utilityInActionDemo),l.xp6(8),l.Q6J("routerLink",t.maskExpressionDocPage),l.xp6(3),l.Q6J("routerLink",t.processorsDocPage),l.xp6(3),l.Q6J("routerLink",t.overwriteModeDocPage))},directives:[a.qo,p.Ls,a.c0,c.V,u.yS],encapsulation:2,changeDetection:0}),n),f=function(){var e=t(function e(){o(this,e)});return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=l.oAB({type:e}),e.\u0275inj=l.cJS({imports:[[s.ez,a.fV,c.j,p.Hi,u.Bz.forChild((0,a.Ve)(g))]]}),e}()}}])}();