"use strict";(self.webpackChunkmaskito=self.webpackChunkmaskito||[]).push([[1505],{1505:(h,r,i)=>{i.r(r),i.d(r,{WhatIsMaskitoDocPageModule:()=>Z});var d=i(6104),n=i(5358),s=i(5208),u=i(2847),c=i(6841),l=i(5019),e=i(4788);let p=(()=>{class t{constructor(){this.maskitoLibrariesDocPage="/getting-started/maskito-libraries",this.coreConceptsOverviewDocPage="/core-concepts/overview"}}return t.\u0275fac=function(o){return new(o||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["what-is-maskito-doc-page"]],decls:67,vars:4,consts:[["header","What is Maskito?"],[1,"tui-space_top-8"],[1,"tui-list"],[1,"tui-list__item"],["href","https://www.cypress.io","target","_blank","tuiLink",""],[1,"islands-wrapper"],["tuiIsland","",1,"island",3,"hoverable","routerLink"],[1,"tui-island__content"],["mode","link","size","s","src","tuiIconGridLarge",1,"tui-island__figure"],[1,"tui-island__title"],[1,"tui-island__paragraph"],["mode","link","size","s","src","tuiIconSettingsLarge",1,"tui-island__figure"]],template:function(o,g){1&o&&(e.TgZ(0,"tui-doc-page",0),e.TgZ(1,"div"),e.TgZ(2,"strong"),e._uU(3,"Maskito"),e.qZA(),e._uU(4," is a collection of libraries, built with TypeScript. It helps you to create an input mask which ensures that users type values according to predefined format. "),e.qZA(),e.TgZ(5,"p"),e._uU(6," Core concepts of the libraries are simple but they provide flexible API to set any format you wish: numbers, phone, date, credit card number etc. "),e.qZA(),e.TgZ(7,"section",1),e.TgZ(8,"h2"),e._uU(9,"Why Maskito?"),e.qZA(),e.TgZ(10,"ul",2),e.TgZ(11,"li",3),e.TgZ(12,"strong"),e._uU(13,"Maskito"),e.qZA(),e._uU(14," supports all user\u2019s interactions with text fields: basic typing and deleting via keyboard, pasting, dropping text inside with a pointer, browser autofill, predictive text from mobile native keyboard. "),e.qZA(),e.TgZ(15,"li",3),e.TgZ(16,"strong"),e._uU(17,"Maskito"),e.qZA(),e._uU(18," is robust. The whole project is developed with "),e.TgZ(19,"code"),e._uU(20,"strict"),e.qZA(),e._uU(21," TypeScript mode. Our code is covered by hundreds of "),e.TgZ(22,"a",4),e._uU(23," Cypress "),e.qZA(),e._uU(24," tests. "),e.qZA(),e.TgZ(25,"li",3),e._uU(26," Server Side Rendering and Shadow DOM support. "),e.qZA(),e.TgZ(27,"li",3),e._uU(28," You can use it with "),e.TgZ(29,"code"),e._uU(30,"HTMLInputElement"),e.qZA(),e._uU(31," and "),e.TgZ(32,"code"),e._uU(33,"HTMLTextAreaElement"),e.qZA(),e._uU(34," . "),e.qZA(),e.TgZ(35,"li",3),e.TgZ(36,"strong"),e._uU(37,"Maskito"),e.qZA(),e._uU(38," core is zero-dependency package. You can mask input in your vanilla JavaScript project. However, we have a separate package for Angular as well and React is coming soon. "),e.qZA(),e.TgZ(39,"li",3),e.TgZ(40,"strong"),e._uU(41,"Maskito"),e.qZA(),e._uU(42," includes optional framework-agnostic package with configurable ready-to-use masks. "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(43,"p"),e._uU(44," No textfield with invalid value! Use Maskito. "),e.TgZ(45,"strong"),e._uU(46,"Mask it!"),e.qZA(),e.qZA(),e.TgZ(47,"section",1),e.TgZ(48,"h2"),e._uU(49,"Learn about Maskito"),e.qZA(),e.TgZ(50,"div",5),e.TgZ(51,"a",6),e.TgZ(52,"div",7),e._UZ(53,"tui-marker-icon",8),e.TgZ(54,"div"),e.TgZ(55,"h3",9),e._uU(56,"Explore libraries"),e.qZA(),e.TgZ(57,"p",10),e._uU(58," Maskito consists of several libraries. Explore them and learn how to install and use them. "),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(59,"a",6),e.TgZ(60,"div",7),e._UZ(61,"tui-marker-icon",11),e.TgZ(62,"div"),e.TgZ(63,"h3",9),e._uU(64,"Core concepts"),e.qZA(),e.TgZ(65,"p",10),e._uU(66," Learn about mask expression, preprocessors and postprocessors, overwrite mode etc. "),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA()),2&o&&(e.xp6(51),e.Q6J("hoverable",!0)("routerLink",g.maskitoLibrariesDocPage),e.xp6(8),e.Q6J("hoverable",!0)("routerLink",g.coreConceptsOverviewDocPage))},directives:[s.qo,u.V,c.h,n.yS,l.B],styles:[".islands-wrapper[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:space-between;grid-gap:2rem;gap:2rem}.island[_ngcontent-%COMP%]{flex:1;min-width:18rem}"],changeDetection:0}),t})(),Z=(()=>{class t{}return t.\u0275fac=function(o){return new(o||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[[d.ez,s.fV,c.y,u.j,l.z,n.Bz.forChild((0,s.Ve)(p))]]}),t})()}}]);