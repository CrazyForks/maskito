"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[1351],{997:(v,d,n)=>{n.d(d,{TuiAddonDocModule:()=>c});var l=n(4537),u=n(9439);let c=(()=>{class i{}return i.\u0275fac=function(m){return new(m||i)},i.\u0275mod=l.oAB({type:i}),i.\u0275inj=l.cJS({imports:[u.JF,u.mG,u.Lx,u.Lq,u.u4]}),i})()},1351:(v,d,n)=>{n.r(d),n.d(d,{PluginsDocPageModule:()=>C});var l=n(8692),u=n(9900),c=n(3178),p=n(997),i=n(2497),r=n(2847),m=n(885),g=n(1673),h=n(3805),P=n(4707),t=n(4537),D=n(6119),f=n(9439),M=n(8225);const j={mask:/^\d{0,3}$/,plugins:[o=>{const a=()=>{const e=o.value;o.addEventListener("beforeinput",s=>{s.defaultPrevented&&e===o.value&&o.dispatchEvent(new CustomEvent("maskitoReject",{bubbles:!0}))},{once:!0})};return o.addEventListener("beforeinput",a,!0),()=>o.removeEventListener("beforeinput",a,!0)}]};var x=n(7258),E=n(5640);let T=(()=>{class o{constructor(){this.maskitoOptions=Object.assign(Object.assign({},j),{plugins:[M.Bb]}),this.value="",this.reject=-1}}return o.\u0275fac=function(e){return new(e||o)},o.\u0275cmp=t.Xpm({type:o,selectors:[["plugins-reject-doc-example-1"]],decls:3,vars:10,consts:[[3,"ngModel","ngModelChange","maskitoReject"],["tuiTextfield","",3,"maskito"]],template:function(e,s){1&e&&(t.TgZ(0,"tui-input",0),t.NdJ("ngModelChange",function(Z){return s.value=Z})("maskitoReject",function(){return s.reject=s.reject+1}),t._uU(1," CVC "),t._UZ(2,"input",1),t.qZA()),2&e&&(t.Udp("animation-duration",300,"ms")("animation-iteration-count",1)("animation-name","reject-"+s.reject%2)("max-width",20,"rem"),t.Q6J("ngModel",s.value),t.xp6(2),t.Q6J("maskito",s.maskitoOptions))},dependencies:[u.JJ,u.On,x.r,g.K3,g.wU,E.MB],styles:["@keyframes reject-0{0%{box-shadow:0 0 #f45725}to{box-shadow:0 0 1rem #f457251f}}@keyframes reject-1{0%{box-shadow:0 0 #f45725}to{box-shadow:0 0 1rem #f457251f}}\n"],encapsulation:2,changeDetection:0}),o})(),y=(()=>{class o{constructor(){this.rejectExample={[P.C.MaskitoOptions]:n.e(3360).then(n.t.bind(n,3360,17)),"index.less":n.e(9901).then(n.t.bind(n,9901,17)),"index.ts":n.e(6001).then(n.t.bind(n,6001,17))}}}return o.\u0275fac=function(e){return new(e||o)},o.\u0275cmp=t.Xpm({type:o,selectors:[["plugins-mode-doc-page"]],decls:15,vars:1,consts:[["header","Plugins"],[1,"tui-space_top-0"],["id","reject","heading","Visualize rejected characters",3,"content"],[1,"tui-space_bottom-3"]],template:function(e,s){1&e&&(t.TgZ(0,"tui-doc-page",0)(1,"p",1)(2,"strong"),t._uU(3,"Plugins"),t.qZA(),t._uU(4," are functions that are called with input/textarea element and mask options as arguments upon mask initialization. They can optionally return cleanup logic and allow you to extend mask with arbitrary additional behavior. "),t.qZA(),t.TgZ(5,"tui-doc-example",2)(6,"tui-notification",3),t._uU(7," This plugin is available as "),t.TgZ(8,"code"),t._uU(9,"maskitoRejectEvent"),t.qZA(),t._uU(10," in "),t.TgZ(11,"code"),t._uU(12,"@maskito/kit"),t.qZA()(),t._UZ(13,"plugins-reject-doc-example-1"),t.qZA(),t._UZ(14,"next-steps"),t.qZA()),2&e&&(t.xp6(5),t.Q6J("content",s.rejectExample))},dependencies:[m.L,D.R,f.qo,f.f2,T],encapsulation:2,changeDetection:0}),o})(),C=(()=>{class o{}return o.\u0275fac=function(e){return new(e||o)},o.\u0275mod=t.oAB({type:o}),o.\u0275inj=t.cJS({imports:[l.ez,u.u5,r.j,g.Qf,m.H,h.L,p.TuiAddonDocModule,c.Bz.forChild((0,i.Ve)(y))]}),o})()}}]);