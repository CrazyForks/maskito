"use strict";(self.webpackChunkmaskito=self.webpackChunkmaskito||[]).push([[705],{8705:(m,r,o)=>{o.r(r),o.d(r,{MaskExpressionDocPageModule:()=>d});var g=o(6104),c=o(7169),i=o(5955),p=o(2847),u=o(885),e=o(4788);let Z=(()=>{class t{constructor(){this.regExpMaskExpDemo=o.e(992).then(o.t.bind(o,6429,17)),this.basicTimeDemo=o.e(891).then(o.t.bind(o,7891,17)),this.dynamicMaskExpDemo=o.e(539).then(o.t.bind(o,5539,17)),this.processorsDocPage="/core-concepts/processors"}}return t.\u0275fac=function(s){return new(s||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["mask-expression-doc-page"]],decls:103,vars:6,consts:[["header","Mask expression"],[1,"tui-space_top-0"],["href","https://github.com/Tinkoff/maskito/blob/main/projects/core/src/lib/types/mask-options.ts","target","_blank","tuiLink",""],[1,"tui-space_top-12"],[1,"tui-list"],[1,"tui-list__item"],["href","https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions","target","_blank","tuiLink",""],[3,"code"],["status","warning"],[1,"tui-space_bottom-0"],[1,"tui-space_top-1","tui-space_bottom-0"],[1,"tui-space_top-1"],["status","info"],[1,"tui-space_top-0","tui-space_bottom-0"],["status","warning",1,"tui-space_top-6"],["tuiLink","",3,"routerLink"],["routerLink","#todo","tuiLink",""]],template:function(s,n){1&s&&(e.TgZ(0,"tui-doc-page",0),e.TgZ(1,"p",1),e.TgZ(2,"strong"),e._uU(3,"Mask expression"),e.qZA(),e._uU(4," is the the main concept of Maskito's core library. It provides the developer with opportunity to predefine format of user's input. For example, you can set mask expression to accept only digits, only latin letters or even you can configure more complex patterns like date string. "),e.qZA(),e.TgZ(5,"p"),e._uU(6," Developer can set mask expression using "),e.TgZ(7,"code"),e._uU(8,"mask"),e.qZA(),e._uU(9," -parameter of "),e.TgZ(10,"a",2),e.TgZ(11,"code"),e._uU(12,"MaskitoOptions"),e.qZA(),e.qZA(),e._uU(13," . "),e.qZA(),e.TgZ(14,"section",3),e.TgZ(15,"h2"),e._uU(16,"Types of mask expression"),e.qZA(),e.TgZ(17,"ul",4),e.TgZ(18,"li",5),e.TgZ(19,"strong"),e._uU(20,"RegExp mask expression"),e.qZA(),e.TgZ(21,"p",1),e._uU(22," The most basic and comprehensible type. The only required knowledge is understanding of native Javascript "),e.TgZ(23,"a",6),e._uU(24," Regular\xa0expression "),e.qZA(),e._uU(25," . "),e.qZA(),e.TgZ(26,"p"),e._uU(27," See the following example: "),e._UZ(28,"tui-doc-code",7),e.qZA(),e.TgZ(29,"tui-notification",8),e._uU(30," Make sure that mask expression works with any of intermediate states, not just final value. "),e.TgZ(31,"p",9),e._uU(32," For example, imagine that you have to create mask for 4-digits PIN code. "),e.qZA(),e.TgZ(33,"p",10),e.TgZ(34,"code"),e._uU(35),e.qZA(),e._uU(36," is an inappropriate mask expression. It does not match intermediate states (you cannot complete 4-digit string without possibility to type 1-, 2- or 3-digit string). "),e.qZA(),e.TgZ(37,"p",11),e.TgZ(38,"code"),e._uU(39),e.qZA(),e._uU(40," is the best solution for our example. "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(41,"li",5),e.TgZ(42,"strong"),e._uU(43,"Pattern mask expression"),e.qZA(),e.TgZ(44,"p",1),e._uU(45," It is a good choice for more complex fixed in size masks. This type of mask expression is presented as array. Each element in the array has to be either a string or a regular expression. Each string is a fixed character and each regular expression is validator of character at the same index. "),e.qZA(),e.TgZ(46,"tui-notification",12),e.TgZ(47,"strong"),e._uU(48,"Fixed character"),e.qZA(),e._uU(49," - already predefined character at the certain position (the same as its index inside mask expression array). It is automatically added when user forgets to type it. It cannot be erased or replaced with another character. "),e.qZA(),e.TgZ(50,"p"),e._uU(51," For example, imagine that you have to create mask for time-string with "),e.TgZ(52,"code"),e._uU(53,"HH:MM"),e.qZA(),e._uU(54," -format. It consists of 4 digits and 1 fixed-character separator "),e.TgZ(55,"code"),e._uU(56,":"),e.qZA(),e._uU(57," . "),e.qZA(),e._UZ(58,"tui-doc-code",7),e.TgZ(59,"p"),e._uU(60," This mask expression forbids something excepts digits or input more than four digits. "),e.qZA(),e.TgZ(61,"p",9),e._uU(62," Also, it manages user's interactions with fixed character. "),e.qZA(),e.TgZ(63,"p",13),e._uU(64," For example, user can press just four digits "),e.TgZ(65,"code"),e._uU(66,"1159"),e.qZA(),e._uU(67," and the input's value becomes "),e.TgZ(68,"code"),e._uU(69,"11:59"),e.qZA(),e.qZA(),e.TgZ(70,"p",1),e._uU(71," Another example, if caret position is after colon and user presses "),e.TgZ(72,"kbd"),e._uU(73,"Backspace"),e.qZA(),e._uU(74," , the input's value will not change but caret will be moved to the left from colon. "),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(75,"section",3),e.TgZ(76,"h2"),e._uU(77,"Dynamic mask expression"),e.qZA(),e.TgZ(78,"p"),e.TgZ(79,"code"),e._uU(80,"mask"),e.qZA(),e._uU(81," -parameter of Maskito's options can also accepts function which generates mask expression. This function will be called "),e.TgZ(82,"strong"),e._uU(83,"every\xa0time\xa0before"),e.qZA(),e._uU(84," any input's changes to generate new version of mask expression. "),e.qZA(),e._UZ(85,"tui-doc-code",7),e.TgZ(86,"tui-notification",14),e.TgZ(87,"p",1),e._uU(88," Be careful! It can be not performance-friendly to generate new mask expression on every input's change. "),e.qZA(),e.TgZ(89,"p",9),e._uU(90," Think about optimization and memoization of the such function. "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(91,"section",3),e.TgZ(92,"h2"),e._uU(93,"Next steps"),e.qZA(),e.TgZ(94,"p"),e._uU(95," The following sections are recommended to explore core concepts further: "),e.qZA(),e.TgZ(96,"ul",4),e.TgZ(97,"li",5),e.TgZ(98,"a",15),e._uU(99," Processors "),e.qZA(),e.qZA(),e.TgZ(100,"li",5),e.TgZ(101,"a",16),e._uU(102," Overwrite mode "),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA()),2&s&&(e.xp6(28),e.Q6J("code",n.regExpMaskExpDemo),e.xp6(7),e.Oqu("/^d{4}$/"),e.xp6(4),e.Oqu("/^d{0,4}$/"),e.xp6(19),e.Q6J("code",n.basicTimeDemo),e.xp6(27),e.Q6J("code",n.dynamicMaskExpDemo),e.xp6(13),e.Q6J("routerLink",n.processorsDocPage))},directives:[i.qo,p.V,i.c0,u.Ls,c.yS],encapsulation:2,changeDetection:0}),t})(),d=(()=>{class t{}return t.\u0275fac=function(s){return new(s||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[[g.ez,i.fV,p.j,u.Hi,c.Bz.forChild((0,i.Ve)(Z))]]}),t})()}}]);