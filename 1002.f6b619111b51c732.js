"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[1002],{6720:(_,u,e)=>{e.d(u,{TuiAddonDocModule:()=>d});var s=e(4537),n=e(9492);let d=(()=>{class t{}return t.\u0275fac=function(a){return new(a||t)},t.\u0275mod=s.oAB({type:t}),t.\u0275inj=s.cJS({imports:[n.JF,n.mG,n.Lx,n.Lq,n.u4]}),t})()},1002:(_,u,e)=>{e.r(u),e.d(u,{default:()=>i});var s=e(6720),n=e(885),d=e(6119),o=e(4537),t=e(9492);let i=(()=>{var a;class c{constructor(){this.utilityInActionDemo=e.e(7698).then(e.t.bind(e,7698,17))}}return(a=c).\u0275fac=function(r){return new(r||a)},a.\u0275cmp=o.Xpm({type:a,selectors:[["transformer-doc-page"]],standalone:!0,features:[o.jDz],decls:30,vars:1,consts:[["header","Transformer","package","CORE"],[1,"tui-space_top-0"],[3,"code"]],template:function(r,m){1&r&&(o.TgZ(0,"tui-doc-page",0)(1,"section")(2,"p",1)(3,"strong"),o._uU(4,"Maskito"),o.qZA(),o._uU(5," libraries were created to prevent user from typing invalid value. "),o._UZ(6,"br"),o.TgZ(7,"strong"),o._uU(8,"Maskito"),o.qZA(),o._uU(9," listens "),o.TgZ(10,"code"),o._uU(11,"beforeinput"),o.qZA(),o._uU(12," and "),o.TgZ(13,"code"),o._uU(14,"input"),o.qZA(),o._uU(15," events. Programmatic (by developer) changes of input's value don't trigger these events! "),o.qZA(),o.TgZ(16,"tui-notification")(17,"strong"),o._uU(18,"Maskito"),o.qZA(),o._uU(19," is based on the assumption that developer is capable to programmatically patch input with "),o.TgZ(20,"u"),o._uU(21,"valid"),o.qZA(),o._uU(22," value! "),o.qZA(),o.TgZ(23,"p"),o._uU(24," If you need to programmatically patch input's value but you are not sure that your value is valid (for example, you get it from the server), you should use "),o.TgZ(25,"code"),o._uU(26,"maskitoTransform"),o.qZA(),o._uU(27," utility . "),o.qZA()(),o._UZ(28,"tui-doc-code",2)(29,"next-steps"),o.qZA()),2&r&&(o.xp6(28),o.Q6J("code",m.utilityInActionDemo))},dependencies:[s.TuiAddonDocModule,t.c0,t.qo,n.H,n.L,d.R],encapsulation:2,changeDetection:0}),c})()}}]);