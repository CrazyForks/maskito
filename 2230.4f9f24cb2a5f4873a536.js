"use strict";(self.webpackChunkmaskito=self.webpackChunkmaskito||[]).push([[2230],{2230:(Z,i,t)=>{t.r(i),t.d(i,{TransformerDocPageModule:()=>m});var l=t(6104),c=t(5358),s=t(9409),u=t(2847),g=t(885),o=t(4788);let p=(()=>{class e{constructor(){this.maskExpressionDocPage="/core-concepts/mask-expression",this.processorsDocPage="/core-concepts/processors",this.overwriteModeDocPage="/core-concepts/overwrite-mode",this.utilityInActionDemo=t.e(7698).then(t.t.bind(t,7698,17))}}return e.\u0275fac=function(r){return new(r||e)},e.\u0275cmp=o.Xpm({type:e,selectors:[["transformer-doc-page"]],decls:44,vars:4,consts:[["header","Transformer","package","CORE"],[1,"tui-space_top-0"],[3,"code"],[1,"tui-space_top-12"],[1,"tui-list"],[1,"tui-list__item"],["tuiLink","",3,"routerLink"]],template:function(r,a){1&r&&(o.TgZ(0,"tui-doc-page",0),o.TgZ(1,"section"),o.TgZ(2,"p",1),o.TgZ(3,"strong"),o._uU(4,"Maskito"),o.qZA(),o._uU(5," libraries were created to prevent user from typing invalid value. "),o._UZ(6,"br"),o.TgZ(7,"strong"),o._uU(8,"Maskito"),o.qZA(),o._uU(9," listens "),o.TgZ(10,"code"),o._uU(11,"beforeinput"),o.qZA(),o._uU(12," and "),o.TgZ(13,"code"),o._uU(14,"input"),o.qZA(),o._uU(15," events. Programatic (by developer) changes of input's value don't trigger these events! "),o.qZA(),o.TgZ(16,"tui-notification"),o.TgZ(17,"strong"),o._uU(18,"Maskito"),o.qZA(),o._uU(19," is based on the assumption that developer is capable to programatically patch input with "),o.TgZ(20,"u"),o._uU(21,"valid"),o.qZA(),o._uU(22," value! "),o.qZA(),o.TgZ(23,"p"),o._uU(24," If you need to programatically patch input's value but you are not sure that your value is valid (for example, you get it from the server), you should use "),o.TgZ(25,"code"),o._uU(26,"maskitoTransform"),o.qZA(),o._uU(27," utility . "),o.qZA(),o.qZA(),o._UZ(28,"tui-doc-code",2),o.TgZ(29,"section",3),o.TgZ(30,"h2"),o._uU(31,"Next steps"),o.qZA(),o.TgZ(32,"p"),o._uU(33," The following sections are recommended to explore core concepts further: "),o.qZA(),o.TgZ(34,"ul",4),o.TgZ(35,"li",5),o.TgZ(36,"a",6),o._uU(37," Mask expression "),o.qZA(),o.qZA(),o.TgZ(38,"li",5),o.TgZ(39,"a",6),o._uU(40," Processors "),o.qZA(),o.qZA(),o.TgZ(41,"li",5),o.TgZ(42,"a",6),o._uU(43," Overwrite mode "),o.qZA(),o.qZA(),o.qZA(),o.qZA(),o.qZA()),2&r&&(o.xp6(28),o.Q6J("code",a.utilityInActionDemo),o.xp6(8),o.Q6J("routerLink",a.maskExpressionDocPage),o.xp6(3),o.Q6J("routerLink",a.processorsDocPage),o.xp6(3),o.Q6J("routerLink",a.overwriteModeDocPage))},directives:[s.qo,g.Ls,s.c0,u.V,c.yS],encapsulation:2,changeDetection:0}),e})(),m=(()=>{class e{}return e.\u0275fac=function(r){return new(r||e)},e.\u0275mod=o.oAB({type:e}),e.\u0275inj=o.cJS({imports:[[l.ez,s.fV,u.j,g.Hi,c.Bz.forChild((0,s.Ve)(p))]]}),e})()}}]);