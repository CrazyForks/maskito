"use strict";(self.webpackChunkmaskito=self.webpackChunkmaskito||[]).push([[5991],{5991:(q,g,o)=>{o.r(g),o.d(g,{OverwriteModeDocPageModule:()=>E});var Z=o(6104),s=o(3738),h=o(5358),v=o(2905),c=o(6250),f=o(2847),l=o(8681),d=o(6117),r=o(1673),m=o(7694),e=o(4788);const x={mask:/^\d+$/,overwriteMode:"shift"};var p=o(1620),u=o(7258);let T=(()=>{class t{constructor(){this.maskitoOptions=x}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["overwrite-mode-shift-doc-example-1"]],decls:2,vars:4,consts:[["ngModel","0000","tuiHintContent","Insert character somewhere in the middle",3,"tuiTextfieldLabelOutside"],["tuiTextfield","","inputmode","decimal",3,"maskito"]],template:function(i,a){1&i&&(e.TgZ(0,"tui-input",0),e._UZ(1,"input",1),e.qZA()),2&i&&(e.Udp("max-width",20,"rem"),e.Q6J("tuiTextfieldLabelOutside",!0),e.xp6(1),e.Q6J("maskito",a.maskitoOptions))},directives:[r.K3,r.wU,s.JJ,s.On,l.bZ,d.xT,p.MB,u.r],encapsulation:2,changeDetection:0}),t})();const O={mask:/^\d+$/,overwriteMode:"replace"};let w=(()=>{class t{constructor(){this.maskitoOptions=O}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["overwrite-mode-replace-doc-example-2"]],decls:2,vars:4,consts:[["ngModel","0000","tuiHintContent","Insert character somewhere in the middle",3,"tuiTextfieldLabelOutside"],["tuiTextfield","","inputmode","decimal",3,"maskito"]],template:function(i,a){1&i&&(e.TgZ(0,"tui-input",0),e._UZ(1,"input",1),e.qZA()),2&i&&(e.Udp("max-width",20,"rem"),e.Q6J("tuiTextfieldLabelOutside",!0),e.xp6(1),e.Q6J("maskito",a.maskitoOptions))},directives:[r.K3,r.wU,s.JJ,s.On,l.bZ,d.xT,p.MB,u.r],encapsulation:2,changeDetection:0}),t})();const M={mask:/^[^\u0430-\u044f\u0451]+$/i,overwriteMode:({value:t})=>/^\d+$/.test(t)?"replace":"shift"};let U=(()=>{class t{constructor(){this.maskitoOptions=M,this.initialValue='This artificial example demonstrates the usage of dynamic mode. If this textarea contains only digits \u2014 "replace" mode is enabled. Otherwise, "shift" mode is enabled.'}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["overwrite-mode-dynamic-doc-example-3"]],decls:2,vars:6,consts:[[3,"ngModel","expandable","tuiTextfieldLabelOutside"],["tuiTextfield","",3,"maskito"]],template:function(i,a){1&i&&(e.TgZ(0,"tui-text-area",0),e._UZ(1,"textarea",1),e.qZA()),2&i&&(e.Udp("max-width",20,"rem"),e.Q6J("ngModel",a.initialValue)("expandable",!0)("tuiTextfieldLabelOutside",!0),e.xp6(1),e.Q6J("maskito",a.maskitoOptions))},directives:[m.Jl,m.eQ,s.JJ,s.On,d.xT,p.MB,u.r],encapsulation:2,changeDetection:0}),t})();function A(t,n){1&t&&(e._uU(0," The classic mode that everyone is used to. Inserting a new character in the middle of the text field value "),e.TgZ(1,"strong"),e._uU(2,"shifts"),e.qZA(),e._uU(3," all following characters to the right. "))}function D(t,n){1&t&&(e._uU(0," All new inserted characters "),e.TgZ(1,"strong"),e._uU(2,"replace"),e.qZA(),e._uU(3," the old characters at the same position. No character shifts. The length of the value remains the same after inserting new character somewhere in middle of the text field. "))}function k(t,n){if(1&t&&(e._uU(0," Parameter "),e.TgZ(1,"code"),e._uU(2,"overwriteMode"),e.qZA(),e._uU(3," also accepts function that will called before each insertion of new characters. This function has one argument \u2014 current element state (read more about it in the "),e.TgZ(4,"a",11),e._uU(5,' "Processors" '),e.qZA(),e._uU(6," section). And this function should return one of two possible values: "),e.TgZ(7,"code"),e._uU(8,"shift"),e.qZA(),e._uU(9," or "),e.TgZ(10,"code"),e._uU(11,"replace"),e.qZA(),e._uU(12," . ")),2&t){const i=e.oxw();e.xp6(4),e.Q6J("routerLink",i.processorsDocPage)}}let y=(()=>{class t{constructor(){this.shiftExample={MaskitoOptions:o.e(1226).then(o.t.bind(o,1226,17))},this.replaceExample={MaskitoOptions:o.e(5034).then(o.t.bind(o,5034,17))},this.dynamicExample={MaskitoOptions:o.e(8945).then(o.t.bind(o,8945,17))},this.maskExpressionDocPage="/core-concepts/mask-expression",this.processorsDocPage="/core-concepts/processors"}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["overwrite-mode-doc-page"]],decls:49,vars:8,consts:[["header","Overwrite mode"],[1,"tui-space_top-0"],[1,"tui-list"],[1,"tui-list__item"],["id","shift","heading","Shift mode",3,"description","content"],["shiftModeDescription",""],["id","replace","heading","Replace mode",3,"description","content"],["replaceModeDescription",""],["id","dynamic","heading","Dynamically detected mode",3,"description","content"],["dynamicModeDescription",""],[1,"tui-space_top-12"],["tuiLink","",3,"routerLink"]],template:function(i,a){if(1&i&&(e.TgZ(0,"tui-doc-page",0),e.TgZ(1,"p",1),e.TgZ(2,"strong"),e._uU(3,"Overwrite mode"),e.qZA(),e._uU(4," regulates behaviour of the mask when user inserts a new character somewhere in the middle of text field, overwriting the character at the current index. "),e.qZA(),e.TgZ(5,"section"),e.TgZ(6,"p"),e.TgZ(7,"code"),e._uU(8,"overwriteMode"),e.qZA(),e._uU(9," can be of a following type: "),e.qZA(),e.TgZ(10,"ul",2),e.TgZ(11,"li",3),e.TgZ(12,"code"),e._uU(13,"shift"),e.qZA(),e._uU(14," (default) "),e.qZA(),e.TgZ(15,"li",3),e.TgZ(16,"code"),e._uU(17,"replace"),e.qZA(),e.qZA(),e.TgZ(18,"li",3),e._uU(19," function that receives element state as an argument and returns "),e.TgZ(20,"code"),e._uU(21,"shift"),e.qZA(),e._uU(22," or "),e.TgZ(23,"code"),e._uU(24,"replace"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(25,"tui-doc-example",4),e.YNc(26,A,4,0,"ng-template",null,5,e.W1O),e._UZ(28,"overwrite-mode-shift-doc-example-1"),e.qZA(),e.TgZ(29,"tui-doc-example",6),e.YNc(30,D,4,0,"ng-template",null,7,e.W1O),e._UZ(32,"overwrite-mode-replace-doc-example-2"),e.qZA(),e.TgZ(33,"tui-doc-example",8),e.YNc(34,k,13,1,"ng-template",null,9,e.W1O),e._UZ(36,"overwrite-mode-dynamic-doc-example-3"),e.qZA(),e.TgZ(37,"section",10),e.TgZ(38,"h2"),e._uU(39,"Next steps"),e.qZA(),e.TgZ(40,"p"),e._uU(41," The following sections are recommended to explore core concepts further: "),e.qZA(),e.TgZ(42,"ul",2),e.TgZ(43,"li",3),e.TgZ(44,"a",11),e._uU(45," Mask expression "),e.qZA(),e.qZA(),e.TgZ(46,"li",3),e.TgZ(47,"a",11),e._uU(48," Processors "),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA()),2&i){const J=e.MAs(27),P=e.MAs(31),Q=e.MAs(35);e.xp6(25),e.Q6J("description",J)("content",a.shiftExample),e.xp6(4),e.Q6J("description",P)("content",a.replaceExample),e.xp6(4),e.Q6J("description",Q)("content",a.dynamicExample),e.xp6(11),e.Q6J("routerLink",a.maskExpressionDocPage),e.xp6(3),e.Q6J("routerLink",a.processorsDocPage)}},directives:[c.qo,c.f2,T,w,U,f.V,h.yS],encapsulation:2,changeDetection:0}),t})(),E=(()=>{class t{}return t.\u0275fac=function(i){return new(i||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[[Z.ez,s.u5,v.U5,c.fV,f.j,r.Qf,l.go,m.U1,d.cn,h.Bz.forChild((0,c.Ve)(y))]]}),t})()}}]);