"use strict";(self.webpackChunkmaskito=self.webpackChunkmaskito||[]).push([[2230],{92230:function(e,t,o){o.r(t),o.d(t,{TransformerDocPageModule:function(){return p}});var r=o(12057),s=o(55358),i=o(7476),n=o(82847),u=o(60885),a=o(74788);let c=(()=>{class e{constructor(){this.maskExpressionDocPage="/core-concepts/mask-expression",this.processorsDocPage="/core-concepts/processors",this.overwriteModeDocPage="/core-concepts/overwrite-mode",this.utilityInActionDemo=o.e(7698).then(o.t.bind(o,7698,17))}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=a.Xpm({type:e,selectors:[["transformer-doc-page"]],decls:44,vars:4,consts:[["header","Transformer","package","CORE"],[1,"tui-space_top-0"],[3,"code"],[1,"tui-space_top-12"],[1,"tui-list"],[1,"tui-list__item"],["tuiLink","",3,"routerLink"]],template:function(e,t){1&e&&(a.TgZ(0,"tui-doc-page",0),a.TgZ(1,"section"),a.TgZ(2,"p",1),a.TgZ(3,"strong"),a._uU(4,"Maskito"),a.qZA(),a._uU(5," libraries were created to prevent user from typing invalid value. "),a._UZ(6,"br"),a.TgZ(7,"strong"),a._uU(8,"Maskito"),a.qZA(),a._uU(9," listens "),a.TgZ(10,"code"),a._uU(11,"beforeinput"),a.qZA(),a._uU(12," and "),a.TgZ(13,"code"),a._uU(14,"input"),a.qZA(),a._uU(15," events. Programatic (by developer) changes of input's value don't trigger these events! "),a.qZA(),a.TgZ(16,"tui-notification"),a.TgZ(17,"strong"),a._uU(18,"Maskito"),a.qZA(),a._uU(19," is based on the assumption that developer is capable to programatically patch input with "),a.TgZ(20,"u"),a._uU(21,"valid"),a.qZA(),a._uU(22," value! "),a.qZA(),a.TgZ(23,"p"),a._uU(24," If you need to programatically patch input's value but you are not sure that your value is valid (for example, you get it from the server), you should use "),a.TgZ(25,"code"),a._uU(26,"maskitoTransform"),a.qZA(),a._uU(27," utility . "),a.qZA(),a.qZA(),a._UZ(28,"tui-doc-code",2),a.TgZ(29,"section",3),a.TgZ(30,"h2"),a._uU(31,"Next steps"),a.qZA(),a.TgZ(32,"p"),a._uU(33," The following sections are recommended to explore core concepts further: "),a.qZA(),a.TgZ(34,"ul",4),a.TgZ(35,"li",5),a.TgZ(36,"a",6),a._uU(37," Mask expression "),a.qZA(),a.qZA(),a.TgZ(38,"li",5),a.TgZ(39,"a",6),a._uU(40," Processors "),a.qZA(),a.qZA(),a.TgZ(41,"li",5),a.TgZ(42,"a",6),a._uU(43," Overwrite mode "),a.qZA(),a.qZA(),a.qZA(),a.qZA(),a.qZA()),2&e&&(a.xp6(28),a.Q6J("code",t.utilityInActionDemo),a.xp6(8),a.Q6J("routerLink",t.maskExpressionDocPage),a.xp6(3),a.Q6J("routerLink",t.processorsDocPage),a.xp6(3),a.Q6J("routerLink",t.overwriteModeDocPage))},directives:[i.qo,u.Ls,i.c0,n.V,s.yS],encapsulation:2,changeDetection:0}),e})(),p=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=a.oAB({type:e}),e.\u0275inj=a.cJS({imports:[[r.ez,i.fV,n.j,u.Hi,s.Bz.forChild((0,i.Ve)(c))]]}),e})()}}]);