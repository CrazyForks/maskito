"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[2448],{997:(T,m,n)=>{n.d(m,{TuiAddonDocModule:()=>c});var r=n(4537),l=n(9439);let c=(()=>{class u{}return u.\u0275fac=function(p){return new(p||u)},u.\u0275mod=r.oAB({type:u}),u.\u0275inj=r.cJS({imports:[l.JF,l.mG,l.Lx,l.Lq,l.u4]}),u})()},2448:(T,m,n)=>{n.r(m),n.d(m,{PluginsDocPageModule:()=>L});var r=n(8692),l=n(9900),c=n(3178),x=n(997),u=n(2497),g=n(2847),p=n(885),d=n(1673),Z=n(3805),v=n(3139),t=n(4537),E=n(6119),D=n(9439),U=n(4555);const C={mask:/^\d{0,3}$/,plugins:[o=>{const i=()=>{const a=o.value;o.addEventListener("beforeinput",e=>{e.defaultPrevented&&a===o.value&&o.dispatchEvent(new CustomEvent("maskitoReject",{bubbles:!0}))},{once:!0})};return o.addEventListener("beforeinput",i,!0),()=>o.removeEventListener("beforeinput",i,!0)}]};var P=n(7258),M=n(5640);let y=(()=>{var o;class i{constructor(){this.maskitoOptions={...C,plugins:[U.Bb]},this.value="",this.reject=-1}}return(o=i).\u0275fac=function(e){return new(e||o)},o.\u0275cmp=t.Xpm({type:o,selectors:[["plugins-reject-doc-example-1"]],decls:3,vars:10,consts:[[3,"ngModel","ngModelChange","maskitoReject"],["tuiTextfield","",3,"maskito"]],template:function(e,s){1&e&&(t.TgZ(0,"tui-input",0),t.NdJ("ngModelChange",function(h){return s.value=h})("maskitoReject",function(){return s.reject=s.reject+1}),t._uU(1," CVC "),t._UZ(2,"input",1),t.qZA()),2&e&&(t.Udp("animation-duration",300,"ms")("animation-iteration-count",1)("animation-name","reject-"+s.reject%2)("max-width",20,"rem"),t.Q6J("ngModel",s.value),t.xp6(2),t.Q6J("maskito",s.maskitoOptions))},dependencies:[l.JJ,l.On,P.r,d.K3,d.wU,M.MB],styles:["@keyframes reject-0{0%{box-shadow:0 0 #f45725}to{box-shadow:0 0 1rem #f457251f}}@keyframes reject-1{0%{box-shadow:0 0 #f45725}to{box-shadow:0 0 1rem #f457251f}}\n"],encapsulation:2,changeDetection:0}),i})();const j={mask:/^\d{0,3}$/,plugins:[(0,n(8282).D2)()]};let O=(()=>{var o;class i{constructor(){this.maskitoOptions=j,this.value="12345"}}return(o=i).\u0275fac=function(e){return new(e||o)},o.\u0275cmp=t.Xpm({type:o,selectors:[["plugins-initial-calibration-doc-example-2"]],decls:3,vars:4,consts:[[3,"ngModel","ngModelChange"],["tuiTextfield","",3,"maskito"]],template:function(e,s){1&e&&(t.TgZ(0,"tui-input",0),t.NdJ("ngModelChange",function(h){return s.value=h}),t._uU(1," Enter number "),t._UZ(2,"input",1),t.qZA()),2&e&&(t.Udp("max-width",20,"rem"),t.Q6J("ngModel",s.value),t.xp6(2),t.Q6J("maskito",s.maskitoOptions))},dependencies:[l.JJ,l.On,P.r,d.K3,d.wU,M.MB],encapsulation:2,changeDetection:0}),i})();function J(o,i){if(1&o&&(t.TgZ(0,"strong"),t._uU(1,"Maskito"),t.qZA(),t._uU(2," libraries were created to prevent "),t.TgZ(3,"u"),t._uU(4,"only user"),t.qZA(),t._uU(5," from typing invalid value. However, sometimes you (developer) need to enable mask but you not sure that you programmatically patched textfield with valid value. In this case you can use "),t.TgZ(6,"a",6)(7,"code"),t._uU(8,"maskitoTransform"),t.qZA()(),t._uU(9," or just add "),t.TgZ(10,"code"),t._uU(11,"maskitoInitialCalibrationPlugin"),t.qZA(),t._uU(12," to mask options. ")),2&o){const a=t.oxw();t.xp6(6),t.Q6J("routerLink",a.transformerDocPage)}}let k=(()=>{var o;class i{constructor(){this.transformerDocPage=`/${v.x.Transformer}`,this.rejectExample={[v.C.MaskitoOptions]:n.e(8364).then(n.t.bind(n,8364,17)),"index.less":n.e(5703).then(n.t.bind(n,5703,17)),"index.ts":n.e(6600).then(n.t.bind(n,6600,17))},this.initialCalibrationExample={[v.C.MaskitoOptions]:n.e(2021).then(n.t.bind(n,436,17)),"index.ts":n.e(5569).then(n.t.bind(n,5569,17))}}}return(o=i).\u0275fac=function(e){return new(e||o)},o.\u0275cmp=t.Xpm({type:o,selectors:[["plugins-mode-doc-page"]],decls:19,vars:3,consts:[["header","Plugins"],[1,"tui-space_top-0"],["id","reject","heading","Visualize rejected characters",3,"content"],[1,"tui-space_bottom-3"],["id","initial-calibration","heading","Built-in initial calibration plugin",3,"content","description"],["initialCalibrationDescription",""],["tuiLink","",3,"routerLink"]],template:function(e,s){if(1&e&&(t.TgZ(0,"tui-doc-page",0)(1,"p",1)(2,"strong"),t._uU(3,"Plugins"),t.qZA(),t._uU(4," are functions that are called with input/textarea element and mask options as arguments upon mask initialization. They can optionally return cleanup logic and allow you to extend mask with arbitrary additional behavior. "),t.qZA(),t.TgZ(5,"tui-doc-example",2)(6,"tui-notification",3),t._uU(7," This plugin is available as "),t.TgZ(8,"code"),t._uU(9,"maskitoRejectEvent"),t.qZA(),t._uU(10," in "),t.TgZ(11,"code"),t._uU(12,"@maskito/kit"),t.qZA()(),t._UZ(13,"plugins-reject-doc-example-1"),t.qZA(),t.TgZ(14,"tui-doc-example",4),t.YNc(15,J,13,1,"ng-template",null,5,t.W1O),t._UZ(17,"plugins-initial-calibration-doc-example-2"),t.qZA(),t._UZ(18,"next-steps"),t.qZA()),2&e){const f=t.MAs(16);t.xp6(5),t.Q6J("content",s.rejectExample),t.xp6(9),t.Q6J("content",s.initialCalibrationExample)("description",f)}},dependencies:[g.V,p.L,E.R,D.qo,D.f2,c.rH,y,O],encapsulation:2,changeDetection:0}),i})(),L=(()=>{var o;class i{}return(o=i).\u0275fac=function(e){return new(e||o)},o.\u0275mod=t.oAB({type:o}),o.\u0275inj=t.cJS({imports:[r.ez,l.u5,g.j,d.Qf,p.H,Z.L,x.TuiAddonDocModule,c.Bz.forChild((0,u.Ve)(k))]}),i})()}}]);