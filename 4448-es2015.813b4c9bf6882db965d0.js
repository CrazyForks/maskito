"use strict";(self.webpackChunkmaskito=self.webpackChunkmaskito||[]).push([[4448],{44448:function(e,t,o){o.r(t),o.d(t,{ReactDocPageModule:function(){return p}});var i=o(12057),s=o(23738),n=o(55358),c=o(42905),a=o(7476),u=o(82847),r=o(60885),d=o(74788);let Z=(()=>{class e{constructor(){this.coreConceptsOverviewDocPage="/core-concepts/overview",this.useMaskitoBasicUsage=o.e(9060).then(o.t.bind(o,19060,17)),this.queryNestedInputDemo=o.e(4271).then(o.t.bind(o,74271,17)),this.controlledInputDemo=o.e(8570).then(o.t.bind(o,18570,17)),this.bestBadPractice=o.e(7920).then(o.t.bind(o,7920,17))}}return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=d.Xpm({type:e,selectors:[["react-doc-page"]],decls:69,vars:5,consts:[["header","React"],[1,"tui-space_top-0"],["status","warning",1,"tui-space_top-6"],[1,"tui-space_bottom-0"],["tuiLink","",3,"routerLink"],[1,"tui-space_top-12"],["code","npm install @maskito/{core,react}"],[3,"code"],[1,"tui-space_bottom-4"],["tuiLink","","href","https://react.dev/reference/react-dom/components/input#props","target","_blank"]],template:function(e,t){1&e&&(d.TgZ(0,"tui-doc-page",0),d.TgZ(1,"p",1),d.TgZ(2,"code"),d._uU(3,"@maskito/react"),d.qZA(),d._uU(4," is a light-weighted library to use "),d.TgZ(5,"strong"),d._uU(6,"Maskito"),d.qZA(),d._uU(7," in an React-way. "),d.qZA(),d.TgZ(8,"tui-notification",2),d.TgZ(9,"strong"),d._uU(10,"Prerequisites"),d.qZA(),d.TgZ(11,"p",3),d._uU(12," To get the most out of this guide, you should review the topic "),d.TgZ(13,"a",4),d._uU(14,' "Core\xa0Concepts" '),d.qZA(),d._uU(15," first. "),d.qZA(),d.qZA(),d.TgZ(16,"section",5),d.TgZ(17,"h2"),d._uU(18,"Getting Started"),d.qZA(),d.TgZ(19,"p"),d._uU(20,"Install libraries"),d.qZA(),d._UZ(21,"tui-doc-code",6),d.TgZ(22,"p"),d._uU(23," and use "),d.TgZ(24,"strong"),d._uU(25,"Maskito"),d.qZA(),d.qZA(),d._UZ(26,"tui-doc-code",7),d.qZA(),d.TgZ(27,"section",5),d.TgZ(28,"h2"),d._uU(29,"Query nested input element"),d.qZA(),d.TgZ(30,"p"),d._uU(31," Pass a predicate to "),d.TgZ(32,"strong"),d._uU(33,"elementPredicate"),d.qZA(),d._uU(34," to find input element for you, if you do not have a direct access to it. For example, you use component from some UI Kit library. "),d.qZA(),d.TgZ(35,"tui-notification",8),d._uU(36," By default "),d.TgZ(37,"strong"),d._uU(38,"Maskito"),d.qZA(),d._uU(39," will try to find input/textarea by querying its host: "),d.TgZ(40,"code"),d._uU(41,"host.querySelector('input,textarea')"),d.qZA(),d._uU(42," so that might be sufficient. Use custom predicate if you need custom logic. "),d.qZA(),d._UZ(43,"tui-doc-code",7),d.qZA(),d.TgZ(44,"section",5),d.TgZ(45,"h2"),d._uU(46,"Controlled masked input"),d.qZA(),d.TgZ(47,"p"),d.TgZ(48,"strong"),d._uU(49,"Maskito"),d.qZA(),d._uU(50," core is developed as framework-agnostic library. It does not depend on any JS-framework's peculiarities. It uses only native browser API. That is why you should use native "),d.TgZ(51,"code"),d._uU(52,"onInput"),d.qZA(),d._uU(53," instead of React-specific "),d.TgZ(54,"code"),d._uU(55,"onChange"),d.qZA(),d._uU(56," event. Do not worry, both events works similarly! Read more about it in the "),d.TgZ(57,"a",9),d._uU(58," official\xa0React\xa0documentation. "),d.qZA(),d.qZA(),d._UZ(59,"tui-doc-code",7),d.qZA(),d.TgZ(60,"section",5),d.TgZ(61,"h2"),d._uU(62,"Best practices & Anti-Patterns"),d.qZA(),d.TgZ(63,"p"),d._uU(64," Pass named variables to avoid unnecessary hook runs with "),d.TgZ(65,"strong"),d._uU(66,"Maskito"),d.qZA(),d._uU(67," recreation: "),d.qZA(),d._UZ(68,"tui-doc-code",7),d.qZA(),d.qZA()),2&e&&(d.xp6(13),d.Q6J("routerLink",t.coreConceptsOverviewDocPage),d.xp6(13),d.Q6J("code",t.useMaskitoBasicUsage),d.xp6(17),d.Q6J("code",t.queryNestedInputDemo),d.xp6(16),d.Q6J("code",t.controlledInputDemo),d.xp6(9),d.Q6J("code",t.bestBadPractice))},directives:[a.qo,r.Ls,u.V,n.yS,a.c0],encapsulation:2,changeDetection:0}),e})(),p=(()=>{class e{}return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=d.oAB({type:e}),e.\u0275inj=d.cJS({imports:[[i.ez,s.u5,s.UX,c.U5,a.fV,u.j,r.Hi,n.Bz.forChild((0,a.Ve)(Z))]]}),e})()}}]);