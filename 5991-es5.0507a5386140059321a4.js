!function(){"use strict";function e(e,t,i){return(t=n(t))in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function t(e,t){for(var i=0;i<t.length;i++){var o=t[i];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function i(e,i,n){return i&&t(e.prototype,i),n&&t(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function n(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var i=e[Symbol.toPrimitive];if(void 0!==i){var n=i.call(e,t||"default");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"==typeof t?t:String(t)}function o(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(self.webpackChunkmaskito=self.webpackChunkmaskito||[]).push([[5991],{45991:function(t,n,r){r.r(n),r.d(n,{OverwriteModeDocPageModule:function(){return D}});var a,s=r(12057),c=r(23738),u=r(55358),l=r(42905),d=r(7476),p=r(82847),m=r(48681),f=r(16117),h=r(21673),g=r(7694),Z=r(14707),v=r(74788),x={mask:/^\d+$/,overwriteMode:"shift"},T=r(81620),w=r(49510),U=r(47258),A=((a=i(function e(){o(this,e),this.maskitoOptions=x,this.value="0000"})).\u0275fac=function(e){return new(e||a)},a.\u0275cmp=v.Xpm({type:a,selectors:[["overwrite-mode-shift-doc-example-1"]],decls:2,vars:5,consts:[["tuiHintContent","Insert character somewhere in the middle",3,"tuiTextfieldLabelOutside","ngModel","ngModelChange"],["tuiTextfield","","inputmode","decimal",3,"maskito"]],template:function(e,t){1&e&&(v.TgZ(0,"tui-input",0),v.NdJ("ngModelChange",function(e){return t.value=e}),v._UZ(1,"input",1),v.qZA()),2&e&&(v.Udp("max-width",20,"rem"),v.Q6J("tuiTextfieldLabelOutside",!0)("ngModel",t.value),v.xp6(1),v.Q6J("maskito",t.maskitoOptions))},directives:[h.K3,h.wU,m.bZ,f.xT,c.JJ,c.On,T.MB,w.F,U.r],encapsulation:2,changeDetection:0}),a),_={mask:/^\d+$/,overwriteMode:"replace"},b=function(){var e=i(function e(){o(this,e),this.maskitoOptions=_,this.value="0000"});return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=v.Xpm({type:e,selectors:[["overwrite-mode-replace-doc-example-2"]],decls:2,vars:5,consts:[["tuiHintContent","Insert character somewhere in the middle",3,"tuiTextfieldLabelOutside","ngModel","ngModelChange"],["tuiTextfield","","inputmode","decimal",3,"maskito"]],template:function(e,t){1&e&&(v.TgZ(0,"tui-input",0),v.NdJ("ngModelChange",function(e){return t.value=e}),v._UZ(1,"input",1),v.qZA()),2&e&&(v.Udp("max-width",20,"rem"),v.Q6J("tuiTextfieldLabelOutside",!0)("ngModel",t.value),v.xp6(1),v.Q6J("maskito",t.maskitoOptions))},directives:[h.K3,h.wU,m.bZ,f.xT,c.JJ,c.On,T.MB,w.F,U.r],encapsulation:2,changeDetection:0}),e}(),k={mask:/^[^\u0430-\u044f\u0451]+$/i,overwriteMode:function(e){var t=e.value;return/^\d+$/.test(t)?"replace":"shift"}},q=function(){var e=i(function e(){o(this,e),this.maskitoOptions=k,this.initialValue='This artificial example demonstrates the usage of dynamic mode. If this textarea contains only digits \u2014 "replace" mode is enabled. Otherwise, "shift" mode is enabled.'});return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=v.Xpm({type:e,selectors:[["overwrite-mode-dynamic-doc-example-3"]],decls:2,vars:6,consts:[[3,"ngModel","expandable","tuiTextfieldLabelOutside"],["tuiTextfield","",3,"maskito"]],template:function(e,t){1&e&&(v.TgZ(0,"tui-text-area",0),v._UZ(1,"textarea",1),v.qZA()),2&e&&(v.Udp("max-width",20,"rem"),v.Q6J("ngModel",t.initialValue)("expandable",!0)("tuiTextfieldLabelOutside",!0),v.xp6(1),v.Q6J("maskito",t.maskitoOptions))},directives:[g.Jl,g.eQ,c.JJ,c.On,f.xT,T.MB,w.F,U.r],encapsulation:2,changeDetection:0}),e}();function y(e,t){1&e&&(v._uU(0," The classic mode that everyone is used to. Inserting a new character in the middle of the text field value "),v.TgZ(1,"strong"),v._uU(2,"shifts"),v.qZA(),v._uU(3," all following characters to the right. "))}function M(e,t){1&e&&(v._uU(0," All new inserted characters "),v.TgZ(1,"strong"),v._uU(2,"replace"),v.qZA(),v._uU(3," the old characters at the same position. No character shifts. The length of the value remains the same after inserting new character somewhere in middle of the text field. "))}function O(e,t){if(1&e&&(v._uU(0," Parameter "),v.TgZ(1,"code"),v._uU(2,"overwriteMode"),v.qZA(),v._uU(3," also accepts function that will called before each insertion of new characters. This function has one argument \u2014 current element state (read more about it in the "),v.TgZ(4,"a",11),v._uU(5,' "Element\xa0state" '),v.qZA(),v._uU(6," section). And this function should return one of two possible values: "),v.TgZ(7,"code"),v._uU(8,"shift"),v.qZA(),v._uU(9," or "),v.TgZ(10,"code"),v._uU(11,"replace"),v.qZA(),v._uU(12," . ")),2&e){var i=v.oxw();v.xp6(4),v.Q6J("routerLink",i.elementStateDocPage)}}var J=function(){var t=i(function t(){o(this,t),this.shiftExample=e({},Z.C.MaskitoOptions,r.e(1226).then(r.t.bind(r,31226,17))),this.replaceExample=e({},Z.C.MaskitoOptions,r.e(5034).then(r.t.bind(r,65034,17))),this.dynamicExample=e({},Z.C.MaskitoOptions,r.e(8945).then(r.t.bind(r,58945,17))),this.maskExpressionDocPage="/core-concepts/mask-expression",this.elementStateDocPage="/core-concepts/element-state",this.processorsDocPage="/core-concepts/processors"});return t.\u0275fac=function(e){return new(e||t)},t.\u0275cmp=v.Xpm({type:t,selectors:[["overwrite-mode-doc-page"]],decls:49,vars:8,consts:[["header","Overwrite mode"],[1,"tui-space_top-0"],[1,"tui-list"],[1,"tui-list__item"],["id","shift","heading","Shift mode",3,"description","content"],["shiftModeDescription",""],["id","replace","heading","Replace mode",3,"description","content"],["replaceModeDescription",""],["id","dynamic","heading","Dynamically detected mode",3,"description","content"],["dynamicModeDescription",""],[1,"tui-space_top-12"],["tuiLink","",3,"routerLink"]],template:function(e,t){if(1&e&&(v.TgZ(0,"tui-doc-page",0),v.TgZ(1,"p",1),v.TgZ(2,"strong"),v._uU(3,"Overwrite mode"),v.qZA(),v._uU(4," regulates behaviour of the mask when user inserts a new character somewhere in the middle of text field, overwriting the character at the current index. "),v.qZA(),v.TgZ(5,"section"),v.TgZ(6,"p"),v.TgZ(7,"code"),v._uU(8,"overwriteMode"),v.qZA(),v._uU(9," can be of a following type: "),v.qZA(),v.TgZ(10,"ul",2),v.TgZ(11,"li",3),v.TgZ(12,"code"),v._uU(13,"shift"),v.qZA(),v._uU(14," (default) "),v.qZA(),v.TgZ(15,"li",3),v.TgZ(16,"code"),v._uU(17,"replace"),v.qZA(),v.qZA(),v.TgZ(18,"li",3),v._uU(19," function that receives element state as an argument and returns "),v.TgZ(20,"code"),v._uU(21,"shift"),v.qZA(),v._uU(22," or "),v.TgZ(23,"code"),v._uU(24,"replace"),v.qZA(),v.qZA(),v.qZA(),v.qZA(),v.TgZ(25,"tui-doc-example",4),v.YNc(26,y,4,0,"ng-template",null,5,v.W1O),v._UZ(28,"overwrite-mode-shift-doc-example-1"),v.qZA(),v.TgZ(29,"tui-doc-example",6),v.YNc(30,M,4,0,"ng-template",null,7,v.W1O),v._UZ(32,"overwrite-mode-replace-doc-example-2"),v.qZA(),v.TgZ(33,"tui-doc-example",8),v.YNc(34,O,13,1,"ng-template",null,9,v.W1O),v._UZ(36,"overwrite-mode-dynamic-doc-example-3"),v.qZA(),v.TgZ(37,"section",10),v.TgZ(38,"h2"),v._uU(39,"Next steps"),v.qZA(),v.TgZ(40,"p"),v._uU(41," The following sections are recommended to explore core concepts further: "),v.qZA(),v.TgZ(42,"ul",2),v.TgZ(43,"li",3),v.TgZ(44,"a",11),v._uU(45," Mask expression "),v.qZA(),v.qZA(),v.TgZ(46,"li",3),v.TgZ(47,"a",11),v._uU(48," Processors "),v.qZA(),v.qZA(),v.qZA(),v.qZA(),v.qZA()),2&e){var i=v.MAs(27),n=v.MAs(31),o=v.MAs(35);v.xp6(25),v.Q6J("description",i)("content",t.shiftExample),v.xp6(4),v.Q6J("description",n)("content",t.replaceExample),v.xp6(4),v.Q6J("description",o)("content",t.dynamicExample),v.xp6(11),v.Q6J("routerLink",t.maskExpressionDocPage),v.xp6(3),v.Q6J("routerLink",t.processorsDocPage)}},directives:[d.qo,d.f2,A,b,q,p.V,u.yS],encapsulation:2,changeDetection:0}),t}(),D=function(){var e=i(function e(){o(this,e)});return e.\u0275fac=function(t){return new(t||e)},e.\u0275mod=v.oAB({type:e}),e.\u0275inj=v.cJS({imports:[[s.ez,c.u5,l.U5,d.fV,p.j,h.Qf,m.go,g.U1,f.cn,u.Bz.forChild((0,d.Ve)(J))]]}),e}()}}])}();