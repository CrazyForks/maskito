"use strict";(self.webpackChunkdemo=self.webpackChunkdemo||[]).push([[6304],{6304:e=>{e.exports="import {MaskitoOptions, maskitoUpdateElement} from '@maskito/core';\nimport {\n    maskitoEventHandler,\n    maskitoPrefixPostprocessorGenerator,\n    maskitoWithPlaceholder,\n} from '@maskito/kit';\n\n/**\n * It is better to use en quad for placeholder characters\n * instead of simple space.\n * @see https://symbl.cc/en/2000\n */\nconst PLACEHOLDER = '+\u2000 (\u2000\u2000\u2000) ___-____';\nconst {\n    /**\n     * Use this utility to remove placeholder characters\n     * ___\n     * @example\n     * inputRef.addEventListener('blur', () => {\n     *     // removePlaceholder('+1 (212) 555-____') => '+1 (212) 555'\n     *     const cleanValue = removePlaceholder(this.value);\n     *\n     *     inputRef.value = cleanValue === '+1' ? '' : cleanValue;\n     * });\n     */\n    removePlaceholder,\n    plugins,\n    ...placeholderOptions\n} = maskitoWithPlaceholder(PLACEHOLDER);\n\nexport default {\n    preprocessors: placeholderOptions.preprocessors,\n    postprocessors: [\n        maskitoPrefixPostprocessorGenerator('+1'),\n        ...placeholderOptions.postprocessors,\n    ],\n    mask: [\n        '+',\n        '1',\n        ' ',\n        '(',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        ')',\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        '-',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n    ],\n    plugins: [\n        ...plugins,\n        maskitoEventHandler('focus', element => {\n            const initialValue = element.value || '+1 (';\n\n            maskitoUpdateElement(\n                element,\n                initialValue + PLACEHOLDER.slice(initialValue.length),\n            );\n        }),\n        maskitoEventHandler('blur', element => {\n            const cleanValue = removePlaceholder(element.value);\n\n            maskitoUpdateElement(element, cleanValue === '+1' ? '' : cleanValue);\n        }),\n    ],\n} as MaskitoOptions;\n"}}]);