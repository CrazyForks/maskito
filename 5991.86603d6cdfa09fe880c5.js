"use strict";(self.webpackChunkmaskito=self.webpackChunkmaskito||[]).push([[5991],{5991:(q,g,o)=>{o.r(g),o.d(g,{OverwriteModeDocPageModule:()=>E});var Z=o(6104),a=o(3738),h=o(5358),v=o(2905),c=o(6250),f=o(2847),l=o(8681),d=o(6117),r=o(1673),m=o(7694),e=o(4788);const x={mask:/^\d+$/,overwriteMode:"shift"};var p=o(1620),u=o(7258);let T=(()=>{class t{constructor(){this.maskitoOptions=x}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["overwrite-mode-shift-doc-example-1"]],decls:2,vars:4,consts:[["ngModel","0000","tuiHintContent","Insert character somewhere in the middle",3,"tuiTextfieldLabelOutside"],["tuiTextfield","","inputmode","decimal",3,"maskito"]],template:function(i,s){1&i&&(e.TgZ(0,"tui-input",0),e._UZ(1,"input",1),e.qZA()),2&i&&(e.Udp("max-width",20,"rem"),e.Q6J("tuiTextfieldLabelOutside",!0),e.xp6(1),e.Q6J("maskito",s.maskitoOptions))},directives:[r.K3,r.wU,a.JJ,a.On,l.bZ,d.xT,p.MB,u.r],encapsulation:2,changeDetection:0}),t})();const O={mask:/^\d+$/,overwriteMode:"replace"};let M=(()=>{class t{constructor(){this.maskitoOptions=O}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["overwrite-mode-replace-doc-example-2"]],decls:2,vars:4,consts:[["ngModel","0000","tuiHintContent","Insert character somewhere in the middle",3,"tuiTextfieldLabelOutside"],["tuiTextfield","","inputmode","decimal",3,"maskito"]],template:function(i,s){1&i&&(e.TgZ(0,"tui-input",0),e._UZ(1,"input",1),e.qZA()),2&i&&(e.Udp("max-width",20,"rem"),e.Q6J("tuiTextfieldLabelOutside",!0),e.xp6(1),e.Q6J("maskito",s.maskitoOptions))},directives:[r.K3,r.wU,a.JJ,a.On,l.bZ,d.xT,p.MB,u.r],encapsulation:2,changeDetection:0}),t})();const w={mask:/^[^\u0430-\u044f\u0451]+$/i,overwriteMode:({value:t})=>/^\d+$/.test(t)?"replace":"shift"};let U=(()=>{class t{constructor(){this.maskitoOptions=w,this.initialValue='This artificial example demonstrates the usage of dynamic mode. If this textarea contains only digits \u2013 "replace"-mode is enabled. Otherwise, "shift"-mode is enabled.'}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["overwrite-mode-dynamic-doc-example-3"]],decls:2,vars:6,consts:[[3,"ngModel","expandable","tuiTextfieldLabelOutside"],["tuiTextfield","",3,"maskito"]],template:function(i,s){1&i&&(e.TgZ(0,"tui-text-area",0),e._UZ(1,"textarea",1),e.qZA()),2&i&&(e.Udp("max-width",20,"rem"),e.Q6J("ngModel",s.initialValue)("expandable",!0)("tuiTextfieldLabelOutside",!0),e.xp6(1),e.Q6J("maskito",s.maskitoOptions))},directives:[m.Jl,m.eQ,a.JJ,a.On,d.xT,p.MB,u.r],encapsulation:2,changeDetection:0}),t})();function A(t,n){1&t&&(e._uU(0," The most classic mode that everyone is used to. Inserting of a new character in the middle of the textfield's value "),e.TgZ(1,"strong"),e._uU(2,"shifts"),e.qZA(),e._uU(3," all right characters at consecutive indexes up. "))}function D(t,n){1&t&&(e._uU(0," All new inserted characters "),e.TgZ(1,"strong"),e._uU(2,"replace"),e.qZA(),e._uU(3," the old characters at the same position. No character shifts. The length of textfield's value remains the same after inserting new character somewhere in middle of the textfield's value. "))}function k(t,n){if(1&t&&(e._uU(0," Parameter "),e.TgZ(1,"code"),e._uU(2,"overwriteMode"),e.qZA(),e._uU(3," also accepts function that will called before each insertion of new characters. This function has one argument \u2013 current element state (read more about it in the section "),e.TgZ(4,"a",11),e._uU(5,' "Processors" '),e.qZA(),e._uU(6," ). And this function should return one of two possible values: "),e.TgZ(7,"code"),e._uU(8,"shift"),e.qZA(),e._uU(9," or "),e.TgZ(10,"code"),e._uU(11,"replace"),e.qZA(),e._uU(12," . ")),2&t){const i=e.oxw();e.xp6(4),e.Q6J("routerLink",i.processorsDocPage)}}let y=(()=>{class t{constructor(){this.shiftExample={MaskitoOptions:o.e(1226).then(o.t.bind(o,1226,17))},this.replaceExample={MaskitoOptions:o.e(5034).then(o.t.bind(o,5034,17))},this.dynamicExample={MaskitoOptions:o.e(8945).then(o.t.bind(o,8945,17))},this.maskExpressionDocPage="/core-concepts/mask-expression",this.processorsDocPage="/core-concepts/processors"}}return t.\u0275fac=function(i){return new(i||t)},t.\u0275cmp=e.Xpm({type:t,selectors:[["overwrite-mode-doc-page"]],decls:50,vars:8,consts:[["header","Overwrite mode"],[1,"tui-space_top-0"],[1,"tui-list"],[1,"tui-list__item"],["id","shift","heading","Shift mode",3,"description","content"],["shiftModeDescription",""],["id","replace","heading","Replace mode",3,"description","content"],["replaceModeDescription",""],["id","dynamic","heading","Dynamically detected mode",3,"description","content"],["dynamicModeDescription",""],[1,"tui-space_top-12"],["tuiLink","",3,"routerLink"]],template:function(i,s){if(1&i&&(e.TgZ(0,"tui-doc-page",0),e.TgZ(1,"p",1),e.TgZ(2,"strong"),e._uU(3,"Overwrite mode"),e.qZA(),e._uU(4," regulates behaviour of the mask when user inserts new character somewhere in the middle of textfield's value (overwriting the current index's value). "),e.qZA(),e.TgZ(5,"section"),e.TgZ(6,"p"),e._uU(7," Maskito's options "),e.TgZ(8,"code"),e._uU(9,"overwriteMode"),e.qZA(),e._uU(10," can be 3 different types: "),e.qZA(),e.TgZ(11,"ul",2),e.TgZ(12,"li",3),e.TgZ(13,"code"),e._uU(14,"shift"),e.qZA(),e._uU(15," (default) "),e.qZA(),e.TgZ(16,"li",3),e.TgZ(17,"code"),e._uU(18,"replace"),e.qZA(),e.qZA(),e.TgZ(19,"li",3),e._uU(20," function that returns "),e.TgZ(21,"code"),e._uU(22,"shift"),e.qZA(),e._uU(23," or "),e.TgZ(24,"code"),e._uU(25,"replace"),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.TgZ(26,"tui-doc-example",4),e.YNc(27,A,4,0,"ng-template",null,5,e.W1O),e._UZ(29,"overwrite-mode-shift-doc-example-1"),e.qZA(),e.TgZ(30,"tui-doc-example",6),e.YNc(31,D,4,0,"ng-template",null,7,e.W1O),e._UZ(33,"overwrite-mode-replace-doc-example-2"),e.qZA(),e.TgZ(34,"tui-doc-example",8),e.YNc(35,k,13,1,"ng-template",null,9,e.W1O),e._UZ(37,"overwrite-mode-dynamic-doc-example-3"),e.qZA(),e.TgZ(38,"section",10),e.TgZ(39,"h2"),e._uU(40,"Next steps"),e.qZA(),e.TgZ(41,"p"),e._uU(42," The following sections are recommended to explore core concepts further: "),e.qZA(),e.TgZ(43,"ul",2),e.TgZ(44,"li",3),e.TgZ(45,"a",11),e._uU(46," Mask expression "),e.qZA(),e.qZA(),e.TgZ(47,"li",3),e.TgZ(48,"a",11),e._uU(49," Processors "),e.qZA(),e.qZA(),e.qZA(),e.qZA(),e.qZA()),2&i){const J=e.MAs(28),P=e.MAs(32),Q=e.MAs(36);e.xp6(26),e.Q6J("description",J)("content",s.shiftExample),e.xp6(4),e.Q6J("description",P)("content",s.replaceExample),e.xp6(4),e.Q6J("description",Q)("content",s.dynamicExample),e.xp6(11),e.Q6J("routerLink",s.maskExpressionDocPage),e.xp6(3),e.Q6J("routerLink",s.processorsDocPage)}},directives:[c.qo,c.f2,T,M,U,f.V,h.yS],encapsulation:2,changeDetection:0}),t})(),E=(()=>{class t{}return t.\u0275fac=function(i){return new(i||t)},t.\u0275mod=e.oAB({type:t}),t.\u0275inj=e.cJS({imports:[[Z.ez,a.u5,v.U5,c.fV,f.j,r.Qf,l.go,m.U1,d.cn,h.Bz.forChild((0,c.Ve)(y))]]}),t})()}}]);