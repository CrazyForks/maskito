!function(){"use strict";(self.webpackChunkmaskito=self.webpackChunkmaskito||[]).push([[6304],{36304:function(e){e.exports="import {MaskitoOptions, maskitoPipe} from '@maskito/core';\nimport {maskitoPrefixPostprocessorGenerator, maskitoWithPlaceholder} from '@maskito/kit';\n\n/**\n * It is better to use en quad for placeholder characters\n * instead of simple space.\n * @see https://symbl.cc/en/2000\n */\nexport const PLACEHOLDER = '+\u2000 (\u2000\u2000\u2000) ___-____';\nexport const {\n    /**\n     * Use this utility to remove placeholder characters\n     * ___\n     * @example\n     * inputRef.addEventListener('blur', () => {\n     *     // removePlaceholder('+1 (212) 555-____') => '+1 (212) 555'\n     *     const cleanValue = removePlaceholder(this.value);\n     *\n     *     inputRef.value = cleanValue === '+1' ? '' : cleanValue;\n     * });\n     */\n    removePlaceholder,\n    plugins,\n    ...placeholderOptions\n} = maskitoWithPlaceholder(PLACEHOLDER);\n\nexport default {\n    preprocessor: placeholderOptions.preprocessor,\n    postprocessor: maskitoPipe(\n        maskitoPrefixPostprocessorGenerator('+1'),\n        placeholderOptions.postprocessor,\n    ),\n    plugins,\n    mask: [\n        '+',\n        '1',\n        ' ',\n        '(',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        ')',\n        ' ',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        '-',\n        /\\d/,\n        /\\d/,\n        /\\d/,\n        /\\d/,\n    ],\n} as MaskitoOptions;\n"}}])}();